{"version":3,"file":"static/js/681.3a3b2de8.chunk.js","mappings":"+PAIMA,EAAa,IAAIC,EAAAA,EAER,SAASC,IAAW,IAAD,EACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA6BE,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAG,UAAGF,EAAOG,eAAV,QAAqB,GAW9B,OAVAC,QAAQC,IAAI,QAASH,IAErBI,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGACqBZ,EAAWa,gBAAgBV,GADhD,OACQW,EADR,OAEEP,EAAWO,GAFb,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACZ,KAGF,4BACE,qCACA,wBACGK,EAAIQ,OACDR,EAAIS,KAAI,SAAAX,GAAM,OACZ,2BACE,wBAAKA,EAAOY,UACZ,uBAAIZ,EAAOa,YAFJb,EAAOc,GADJ,IAMd,gDAIX,C,gHClCKC,EAAU,mCACVC,EAAW,+BAEIrB,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA6CnB,OA7CmBA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MACnB,6GAE2BsB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,uCACqBD,IAHhD,cAEUG,EAFV,yBAKWA,EAASV,MALpB,gCAOIJ,QAAQe,MAAR,MAPJ,2GADmBxB,IACnB,0DAWA,WAAgByB,GAAhB,gGAE2BH,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iCACeD,EADf,iCAC+CK,EAD/C,gCAF3B,cAEUF,EAFV,yBAKWA,EAASV,MALpB,gCAOIJ,QAAQe,MAAR,MAPJ,4GAXA,IAWA,gEAWA,WAAsBtB,GAAtB,gGAE2BoB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAnB,EADA,oBACmBkB,EADnB,oBAF3B,cAEUG,EAFV,yBAKWA,EAASV,MALpB,gCAOIJ,QAAQe,MAAR,MAPJ,4GAXA,IAWA,gEAWA,WAAsBtB,GAAtB,gGAE2BoB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAnB,EADA,4BAC2BkB,EAD3B,oBAF3B,cAEUG,EAFV,yBAKWA,EAASV,MALpB,gCAOIJ,QAAQe,MAAR,MAPJ,4GAXA,IAWA,gEAWA,WAAsBtB,GAAtB,gGAE2BoB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACAnB,EADA,4BAC2BkB,EAD3B,oBAF3B,cAEUG,EAFV,yBAKWA,EAASV,MALpB,gCAOIJ,QAAQe,MAAR,MAPJ,4GAXA,MAWA,EA7CmBxB,E","sources":["components/Reviews.jsx","services/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieAPI from 'services/Api';\n\nconst reviewsApi = new MovieAPI();\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [review, setReviews] = useState([]);\n\n  const arr = review.results ?? [];\n  console.log('arr: ', arr);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      const data = await reviewsApi.getMovieReviews(movieId);\n      setReviews(data);\n    }\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <p>Reviews:</p>\n      <ul>\n        {arr.length\n          ? arr.map(review => (\n              <li key={review.id}>\n                <h4>{review.author}</h4>\n                <p>{review.content}</p>\n              </li>\n            ))\n          : 'We don`t have any reviews for this movie.'}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '250b660de277c9bf01aaf41149686697';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport default class MovieAPI {\n  async getTrendingMovies() {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovies(query) {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieDetails(movieId) {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieCredits(movieId) {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieReviews(movieId) {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n"],"names":["reviewsApi","MovieAPI","Reviews","movieId","useParams","useState","review","setReviews","arr","results","console","log","useEffect","getMovieReviews","data","fetchMovieReviews","length","map","author","content","id","API_KEY","BASE_URL","axios","response","error","query"],"sourceRoot":""}